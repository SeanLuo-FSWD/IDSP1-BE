{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Error/Error.module.scss","components/Post/Post.module.scss","store/context/LoginContext.tsx","constants/api_url.ts","components/Error/Error.tsx","pages/login/Login.tsx","utils/api/auth.ts","components/Routing/LoggedInRoutesKeeper.tsx","constants/server_url.ts","utils/api/posts.ts","store/redux/constants/actionTypes.ts","components/Post/PostLike.tsx","components/Post/PostComment.tsx","components/Post/Post.tsx","store/redux/actions/feed_act.ts","pages/index/Feed.tsx","store/redux/selector/Feed.ts","pages/users/Users.tsx","components/Routing/LoggedInRoutes.tsx","pages/register/register.tsx","components/Navbar/Navbar.tsx","components/Routing/Routing.tsx","App.tsx","store/redux/reducers/feed.ts","store/redux/reducers/index.ts","store/redux/store/index.ts","index.tsx"],"names":["module","exports","LoginContext","createContext","API_URL","Error","props","className","styles","error","message","Login","useContext","signUpStatus","setSignUpStatus","setUsername","setIsAuthenticated","setUserId","useState","loginError","setLoginError","email","password","person","setPerson","handleChange","e","name","target","value","htmlFor","type","placeholder","required","onChange","onClick","preventDefault","user_obj","cb","axios","post","headers","then","response","console","log","catch","login","err","result","data","username","userId","to","LoggedInRoutesKeeper","isAuthenticated","children","SERVER_URL","postCreate","post_obj","a","fetchFeed","get","posts","likePost","like_obj","addComment","comment_obj","id","createdAt","postId","FEED_FETCH","API_ERROR","COMMENT_ADD","POST_LIKE","POST_CREATE","PostLike","show","setShow","like_arr","map","like","length","PostComment","style","paddingLeft","connect","dispatch","onPostComment","doPostComment","onLikeComment","post_like","doLikePost","comment","setComment","commentsVisible","setCommentsVisible","handleLike","isLike","uuidv4","userName","title","_","filter","likes","o","textDecoration","commentList","c","onSubmit","Date","state","feed","feedState","onFetchFeed","reverse","onPostCreate","post_obj_res","doPostCreate","setTitle","setMessage","useEffect","rows","cols","Users","ReactRouterSetup","exact","path","Register","history","useHistory","signUpError","setSignUpError","register","push","Navbar","setLogoutError","navBar","navBar__item","Routing","LoggedInRoutes","App","Provider","INITIAL_STATE","feedReducer","action","feedStore","new_likes_arr","i","w","new_post_list","final_state","new_state_post","new_commentList","rootReducer","combineReducers","logger","createLogger","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca1395f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"Navbar_navBar__27Cf3\",\"navBar__item\":\"Navbar_navBar__item__38gja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__T_9Pn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\"};","import { createContext, Dispatch, SetStateAction } from \"react\";\n\nexport interface ILoginContext {\n  userId: string;\n  setUserId: Dispatch<SetStateAction<string>>;\n  username: string;\n  setUsername: Dispatch<SetStateAction<string>>;\n  isAuthenticated: boolean;\n  setIsAuthenticated: Dispatch<SetStateAction<boolean>>;\n  signUpStatus: boolean;\n  setSignUpStatus: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const LoginContext = createContext({} as ILoginContext);\n","// const API_URL = \"http://671cdc1794ca.ngrok.io/api\";\n// const API_URL = \"http://localhost:8000/api\";\n// J's server ran locally\nconst API_URL = \"http://idsp.link/api\";\n\nexport default API_URL;\n","import React from \"react\";\nimport styles from \"./Error.module.scss\";\n\nconst Error = (props: any) => {\n  return (\n    <div>\n      <h2 className={styles.error}>{props.message}</h2>\n    </div>\n  );\n};\n\nexport default Error;\n","import React, { useContext, useState } from \"react\";\nimport { LoginContext } from \"../../store/context/LoginContext\";\nimport { Link } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { login } from \"../../utils/api/auth\";\nimport Error from \"../../components/Error/Error\";\n\nfunction Login() {\n  const {\n    signUpStatus,\n    setSignUpStatus,\n    setUsername,\n    setIsAuthenticated,\n    setUserId,\n  } = useContext(LoginContext);\n\n  const [loginError, setLoginError] = useState(\"\");\n\n  const [person, setPerson] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setPerson({ ...person, [name]: value });\n  };\n\n  const handleLogin = (e: any) => {\n    e.preventDefault();\n\n    if (person.email && person.password) {\n      const user_obj = {\n        email: person.email,\n        password: person.password,\n      };\n      login(user_obj, (err: Error, result: any) => {\n        if (err) {\n          console.log(err);\n          setLoginError(err.message);\n        } else {\n          setLoginError(\"\");\n\n          setIsAuthenticated(true);\n          setSignUpStatus(false);\n\n          // Can I get username back here?\n          console.log(\"login result message\");\n          console.log(result);\n          setUsername(result.data.username);\n          setUserId(result.data.userId);\n        }\n      });\n    } else {\n      setLoginError(\"You are missing some credentials\");\n    }\n  };\n\n  const handleLogin_test = (e: any) => {\n    e.preventDefault();\n    setUsername(\"tester\");\n    setUserId(\"tester123\");\n    setLoginError(\"\");\n\n    setIsAuthenticated(true);\n    setSignUpStatus(false);\n  };\n\n  return (\n    <div>\n      {signUpStatus && <h2>Sign up success</h2>}\n      {loginError && <Error message={loginError} />}\n      <h2>Please login</h2>\n      <h4>bob@bob.com</h4>\n      <div>\n        <label htmlFor=\"uname\">\n          <b>email</b>\n        </label>\n        <input\n          type=\"text\"\n          placeholder=\"Enter email\"\n          name=\"email\"\n          required\n          value={person.email}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"psw\">\n          <b>Password</b>\n        </label>\n        <input\n          type=\"password\"\n          placeholder=\"Enter Password\"\n          name=\"password\"\n          required\n          value={person.password}\n          onChange={handleChange}\n        />\n        <button\n          // onClick={() => {\n          //   console.log(\"setIsAuthenticated toggled to true\");\n          //   setIsAuthenticated(true);\n          //   setSignUpStatus(false);\n          // }}\n          onClick={handleLogin}\n        >\n          Login\n        </button>\n      </div>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/register\">Register</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","// import { posts } from \"../../FakeDb/posts\";\nimport axios from \"axios\";\nimport SERVER_URL from \"../../constants/server_url\";\nimport API_URL from \"../../constants/api_url\";\n\nconst logout = (cb: Function) => {\n  axios\n    .get(`${API_URL}/user/logout`)\n    .then((response) => {\n      console.log(\"post register response\");\n      console.log(response);\n      cb(null, response);\n    })\n    .catch((error) => {\n      console.log(\"post logout error\");\n      console.log(error);\n      cb(error);\n    });\n};\n\nconst login = (user_obj: {}, cb: Function) => {\n  axios\n    .post(`${API_URL}/user/login`, user_obj, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      // withCredentials: true,\n    })\n    .then((response) => {\n      console.log(\"post login response\");\n      console.log(response);\n      cb(null, response);\n    })\n    .catch((error) => {\n      console.log(\"post login error\");\n      console.log(error);\n      cb(error);\n    });\n};\n\nconst register = (user_obj: {}, cb: Function) => {\n  axios\n    .post(`${API_URL}/user/signUp`, user_obj)\n    .then((response) => {\n      console.log(\"post register response\");\n      console.log(response);\n      cb(null, response);\n    })\n    .catch((error) => {\n      console.log(\"post register error\");\n      console.log(error);\n      cb(error);\n    });\n};\n\nexport { register, login, logout };\n","import React, { FC, useContext } from \"react\";\nimport { LoginContext } from \"../../store/context/LoginContext\";\nimport Login from \"../../pages/login/Login\";\n\nconst LoggedInRoutesKeeper = (props: any) => {\n  const { isAuthenticated } = useContext(LoginContext);\n\n  return <>{isAuthenticated ? props.children : <Login />}</>;\n\n  // return props.children;\n};\n\nexport default LoggedInRoutesKeeper;\n","let SERVER_URL = \"\";\n\nif (process.env.NODE_ENV != \"production\") {\n  SERVER_URL = \"http://localhost:8080\";\n} else {\n  SERVER_URL = `https://comp2350-week6-sean-luo.herokuapp.com`;\n}\nexport default SERVER_URL;\n","// import { posts } from \"../../FakeDb/posts\";\nimport axios from \"axios\";\nimport SERVER_URL from \"../../constants/server_url\";\nimport { TComment } from \"../../interfaces/IPost\";\n\nconst postCreate = async (post_obj: {}, cb: Function) => {\n  axios\n    .post(`${SERVER_URL}/ts/create_post`, {\n      post_obj,\n    })\n    .then((response) => {\n      console.log(\"postCreate response\");\n      console.log(response);\n      cb(null, response.data);\n    })\n    .catch((err) => {\n      console.log(\"postCreate error\");\n      console.log(err);\n      cb(err);\n    });\n};\n\nconst fetchFeed = async (cb: Function) => {\n  try {\n    const posts = await axios.get(`${SERVER_URL}/ts/posts`);\n    cb(null, posts.data);\n  } catch (error) {\n    cb(error);\n  }\n};\n\nconst likePost = async (like_obj: any, cb: Function) => {\n  axios\n    .post(`${SERVER_URL}/ts/like_post`, like_obj)\n    .then((response) => {\n      console.log(\"likePost response\");\n      console.log(response);\n      cb(null, response.data);\n    })\n    .catch((err) => {\n      console.log(\"likePost error\");\n      console.log(err);\n      cb(err);\n    });\n};\n\nconst addComment = async (comment_obj: TComment, cb: Function) => {\n  console.log(\"comment_objcomment_objcomment_objcomment_obj\");\n\n  console.log(comment_obj);\n\n  axios\n    .post(`${SERVER_URL}/ts/add_comment`, {\n      userId: comment_obj.userId,\n      id: comment_obj.id,\n      username: comment_obj.username,\n      createdAt: comment_obj.createdAt,\n      message: comment_obj.message,\n      postId: comment_obj.postId,\n    })\n    .then((response) => {\n      console.log(\"add_comment response\");\n      console.log(response);\n      cb(null, response.data);\n    })\n    .catch((err) => {\n      console.log(\"add_comment error\");\n      console.log(err);\n      cb(err);\n    });\n};\n\nexport { fetchFeed, likePost, addComment, postCreate };\n","import { IPost, TComment, TLikes } from \"../../../interfaces/IPost\";\n\n// export const POST_ADD = \"POST_ADD\";\nexport const FEED_FETCH = \"FEED_FETCH\";\nexport const API_ERROR = \"API_ERROR\";\nexport const COMMENT_ADD = \"COMMENT_ADD\";\nexport const POST_LIKE = \"POST_LIKE\";\nexport const POST_CREATE = \"POST_CREATE\";\n\nexport interface FeedFetchAction {\n  type: typeof FEED_FETCH;\n  posts: IPost[];\n}\n\nexport interface ErrorAction {\n  type: typeof API_ERROR;\n  error: string;\n}\n\nexport interface CommentAddAction {\n  type: typeof COMMENT_ADD;\n  comment_obj: TComment;\n}\n\nexport interface LikeAction {\n  type: typeof POST_LIKE;\n  post_like: any;\n}\n\nexport interface postCreateAction {\n  type: typeof POST_CREATE;\n  post_obj_res: any;\n}\n\nexport type FeedAction =\n  | FeedFetchAction\n  | ErrorAction\n  | CommentAddAction\n  | LikeAction\n  | postCreateAction;\n\nexport type FeedActionTypes = FeedAction;\n","import React, { useState } from \"react\";\nimport { TLikes } from \"../../interfaces/IPost\";\n\nconst PostLike = (props: any) => {\n  const [show, setShow] = useState(false);\n  function likeList() {\n    console.log(\"like like like\");\n    console.log(props.like_arr);\n\n    return props.like_arr.map((like: any) => {\n      console.log(like);\n\n      return <li key={like.id}>{like.username}</li>;\n    });\n  }\n\n  return (\n    <div>\n      {show && <ul>{likeList()}</ul>}\n      <h4 onClick={() => setShow(!show)}>{props.like_arr.length}</h4>\n    </div>\n  );\n};\n\nexport default PostLike;\n","import React, { useState } from \"react\";\nimport { TComment } from \"../../interfaces/IPost\";\n\nconst PostComment: React.FC<TComment> = (props) => {\n  return (\n    <>\n      <div>\n        <div className=\"flex--space-between\">\n          <h3>{props.username}</h3>\n          <h4>{props.createdAt}</h4>\n        </div>\n        <h4 style={{ paddingLeft: \"20px\" }}>{props.message}</h4>\n      </div>\n    </>\n  );\n};\n\nexport default PostComment;\n","import React, { useState, useContext } from \"react\";\nimport { TComment } from \"../../interfaces/IPost\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport PostLike from \"./PostLike\";\nimport PostComment from \"./PostComment\";\nimport { LoginContext } from \"../../store/context/LoginContext\";\nimport _ from \"lodash\";\nimport Error from \"../Error/Error\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { connect } from \"react-redux\";\nimport { doPostComment, doLikePost } from \"../../store/redux/actions/feed_act\";\nimport styles from \"./Post.module.scss\";\n\nconst Post = (props: any) => {\n  const { username, userId } = useContext(LoginContext);\n\n  const [comment, setComment] = useState(\"\");\n  const [commentsVisible, setCommentsVisible] = useState(false);\n\n  const commentSubmit = (e: any) => {\n    e.preventDefault();\n\n    const comment_obj: TComment = {\n      userId: userId,\n      username: username,\n      createdAt: new Date(),\n      message: comment,\n      id: uuidv4(),\n      postId: props.id,\n    };\n\n    props.onPostComment(comment_obj);\n  };\n\n  const handleLike = (isLike: boolean) => {\n    const like_obj = {\n      id: uuidv4(),\n      userId: userId,\n      username: username,\n      postId: props.id,\n      isLike: isLike,\n    };\n\n    props.onLikeComment(like_obj);\n  };\n\n  function checkLiked(): boolean {\n    return _.filter(props.likes, (o) => o.userId == userId).length != 0;\n  }\n\n  return (\n    <div key={props.postId} className={styles.post}>\n      <div className=\"flex--space-between\">\n        <h4>{props.userName}</h4>\n        <h4>{props.createdAt}</h4>\n      </div>\n      <h2>{props.title}</h2>\n      <h5 style={{ paddingLeft: \"20px\" }}>{props.message}</h5>\n      <div className=\"flex--space-between\">\n        <div className=\"flex\">\n          {checkLiked() ? (\n            <ThumbUpIcon\n              onClick={() => {\n                handleLike(false);\n              }}\n            />\n          ) : (\n            <ThumbUpAltOutlinedIcon\n              onClick={() => {\n                handleLike(true);\n              }}\n            />\n          )}\n          <PostLike like_arr={props.likes} />\n        </div>\n        <div>\n          <h4\n            style={{ textDecoration: \"underline\" }}\n            onClick={() => setCommentsVisible(!commentsVisible)}\n          >\n            See Comments\n          </h4>\n        </div>\n      </div>\n\n      {commentsVisible && (\n        <div>\n          <div>\n            {props.commentList.map((c: TComment) => {\n              return <PostComment key={c.id} {...c} />;\n            })}\n          </div>\n          <form onSubmit={commentSubmit}>\n            <input\n              type=\"text\"\n              id=\"comment\"\n              name=\"comment\"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n            />\n            <button type=\"submit\">add Comment</button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    onPostComment: (comment_obj: TComment) =>\n      dispatch(doPostComment(comment_obj)),\n    onLikeComment: (like_obj: any) => dispatch(doLikePost(like_obj)),\n  };\n};\n\n// export default Post;\nexport default connect(null, mapDispatchToProps)(Post);\n","import { Dispatch } from \"redux\";\nimport { IPost, TLikes } from \"../../../interfaces/IPost\";\nimport {\n  fetchFeed,\n  addComment,\n  likePost,\n  postCreate,\n} from \"../../../utils/api/posts\";\nimport { TComment } from \"../../../interfaces/IPost\";\n\nimport {\n  FEED_FETCH,\n  API_ERROR,\n  COMMENT_ADD,\n  POST_LIKE,\n  POST_CREATE,\n} from \"../constants/actionTypes\";\n\nconst doPostCreate = (post_obj: {}) => async (dispatch: Dispatch) => {\n  postCreate(post_obj, (err: Error, result: IPost[]) => {\n    if (err) {\n      dispatch({ type: API_ERROR, error: err.message });\n    } else {\n      dispatch({ type: POST_CREATE, post_obj_res: result });\n    }\n  });\n};\n\nconst doFetchFeed = () => async (dispatch: Dispatch) => {\n  fetchFeed((err: Error, result: IPost[]) => {\n    if (err) {\n      dispatch({ type: API_ERROR, error: err.message });\n    } else {\n      result.reverse();\n      dispatch({ type: FEED_FETCH, posts: result });\n    }\n  });\n};\n\nconst doFetchFeedError = (error: string) => ({\n  type: API_ERROR,\n  error,\n});\n\nconst doPostComment = (comment_obj: TComment) => async (dispatch: Dispatch) => {\n  addComment(comment_obj, (err: Error, result: IPost[]) => {\n    if (err) {\n      dispatch({ type: API_ERROR, error: err.message });\n    } else {\n      dispatch({ type: COMMENT_ADD, comment_obj: result });\n    }\n  });\n};\n\nconst doLikePost = (like_obj: any) => async (dispatch: Dispatch) => {\n  likePost(like_obj, (err: Error, result: any) => {\n    if (err) {\n      dispatch({ type: API_ERROR, error: err.message });\n    } else {\n      dispatch({ type: POST_LIKE, post_like: result });\n    }\n  });\n};\n\nexport {\n  doFetchFeed,\n  doFetchFeedError,\n  doPostComment,\n  doLikePost,\n  doPostCreate,\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { LoginContext } from \"../../store/context/LoginContext\";\nimport { connect } from \"react-redux\";\nimport { doFetchFeed, doPostCreate } from \"../../store/redux/actions/feed_act\";\nimport { getFeed, getFeedError } from \"../../store/redux/selector/Feed\";\nimport Post from \"../../components/Post/Post\";\nimport Error from \"../../components/Error/Error\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { IPost } from \"../../interfaces/IPost\";\n\nconst Feed = (props: any) => {\n  const { username } = useContext(LoginContext);\n\n  const [title, setTitle] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    props.onFetchFeed();\n  }, []);\n\n  const postSubmit = (e: any) => {\n    e.preventDefault();\n\n    const post_obj: IPost = {\n      id: uuidv4(),\n      userName: username,\n      createdAt: new Date(),\n      title: title,\n      message: message,\n      likes: [],\n      commentList: [],\n    };\n\n    props.onPostCreate(post_obj);\n  };\n\n  return (\n    <div>\n      <h1>Posts feed page</h1>\n      <h2>Welcome: {username}</h2>\n\n      <div>\n        <form onSubmit={postSubmit}>\n          Title:{\" \"}\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <textarea\n            rows={4}\n            cols={50}\n            name=\"message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <input type=\"submit\" />\n        </form>\n      </div>\n\n      <div>\n        {props.feed.error ? (\n          <Error message={props.feed.error} />\n        ) : props.feed.posts.length > 0 ? (\n          props.feed.posts.map((post: any) => {\n            return <Post key={post.id} {...post}></Post>;\n          })\n        ) : (\n          <div>\n            <h2>loading...</h2>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    feed: getFeed(state.feedState),\n    error: getFeedError(state.feedState),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    onFetchFeed: () => dispatch(doFetchFeed()),\n    onPostCreate: (post_obj: IPost) => dispatch(doPostCreate(post_obj)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feed);\n","import { IPost } from \"../../../interfaces/IPost\";\nimport IFeed from \"../../../interfaces/redux\";\n\nconst getFeed = (feedState: IFeed) => {\n  return feedState;\n};\n\nconst getFeedError = (feedState: IFeed) => feedState.error;\n\nexport { getFeed, getFeedError };\n","import React, { useState, useContext } from \"react\";\nimport { LoginContext } from \"../../store/context/LoginContext\";\n\nfunction Users() {\n  const { username } = useContext(LoginContext);\n\n  return (\n    <div>\n      <h1>Users page</h1>\n      <h2>Welcome: {username} </h2>\n    </div>\n  );\n}\n\nexport default Users;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"../../pages/index/Feed\";\nimport Users from \"../../pages/users/Users\";\nconst ReactRouterSetup = () => {\n  return (\n    <>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n\n      {/* \n        <Route path=\"/\" render={(props) => <Home {...props} />} />\n      */}\n\n      <Route path=\"/users\">\n        <Users />\n      </Route>\n    </>\n  );\n};\n\nexport default ReactRouterSetup;\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { LoginContext } from \"../../store/context/LoginContext\";\nimport { register } from \"../../utils/api/auth\";\nimport Error from \"../../components/Error/Error\";\n\nconst Register = () => {\n  const history = useHistory();\n  const [person, setPerson] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const { setSignUpStatus } = useContext(LoginContext);\n  const [signUpError, setSignUpError] = useState(\"\");\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setPerson({ ...person, [name]: value });\n  };\n  const handleRegister = (e: any) => {\n    e.preventDefault();\n    if (person.email && person.password && person.username) {\n      const user_obj = {\n        username: person.username,\n        email: person.email,\n        password: person.password,\n      };\n      register(user_obj, (err: Error, result: any) => {\n        if (err) {\n          console.log(err);\n          setSignUpError(err.message);\n        } else {\n          setSignUpError(\"\");\n          setSignUpStatus(true);\n          console.log(\"registration result message\");\n          console.log(result.data.message);\n\n          history.push(\"/\");\n        }\n      });\n    } else {\n      setSignUpError(\"You are missing some credentials\");\n    }\n  };\n  return (\n    <>\n      <article className=\"form\">\n        {signUpError && <Error message={signUpError} />}\n        <form>\n          <div className=\"form-control\">\n            <label htmlFor=\"username\">username : </label>\n            <input\n              type=\"username\"\n              id=\"username\"\n              name=\"username\"\n              value={person.username}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"email\">Email : </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={person.email}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"password\">password : </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={person.password}\n              onChange={handleChange}\n            />\n          </div>\n\n          <button type=\"submit\" onClick={handleRegister}>\n            Register\n          </button>\n        </form>\n      </article>\n    </>\n  );\n};\n\nexport default Register;\n","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LoginContext } from \"../../store/context/LoginContext\";\nimport { logout } from \"../../utils/api/auth\";\nimport styles from \"./Navbar.module.scss\";\n\nfunction Navbar() {\n  const [logoutError, setLogoutError] = useState(\"\");\n\n  const { setUsername, setIsAuthenticated, setUserId } = useContext(\n    LoginContext\n  );\n\n  function handleLogout() {\n    logout((err: Error, result: any) => {\n      if (err) {\n        console.log(err);\n        setLogoutError(err.message);\n      } else {\n        setLogoutError(\"\");\n\n        // Can I get username back here?\n        console.log(\"LOGOUT result message\");\n        console.log(result);\n        setUsername(\"\");\n        setUserId(\"\");\n        setIsAuthenticated(false);\n      }\n    });\n  }\n  return (\n    <div className={`${styles.navBar} flex--space-around`}>\n      <div className={styles.navBar__item}>\n        <Link to=\"/\">Home</Link>\n      </div>\n      <div className={styles.navBar__item}>\n        <Link to=\"/users\">Users</Link>\n      </div>\n      <div className={styles.navBar__item}>\n        <button onClick={handleLogout}>Logout</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport LoggedInRoutesKeeper from \"./LoggedInRoutesKeeper\";\nimport LoggedInRoutes from \"./LoggedInRoutes\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Register from \"../../pages/register/register\";\nimport Navbar from \"../Navbar/Navbar\";\n\nconst Routing = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        {/* <Route path=\"/login\">\n          <Login />\n        </Route> */}\n        <LoggedInRoutesKeeper>\n          <Navbar />\n          <LoggedInRoutes />\n        </LoggedInRoutesKeeper>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routing;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport { LoginContext } from \"./store/context/LoginContext\";\nimport Routing from \"./components/Routing/Routing\";\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [signUpStatus, setSignUpStatus] = useState(false);\n\n  return (\n    <LoginContext.Provider\n      value={{\n        userId,\n        setUserId,\n        isAuthenticated,\n        username,\n        setUsername,\n        setIsAuthenticated,\n        signUpStatus,\n        setSignUpStatus,\n      }}\n    >\n      <Routing />\n    </LoginContext.Provider>\n  );\n}\n\nexport default App;\n","import {\n  FEED_FETCH,\n  API_ERROR,\n  FeedActionTypes,\n  COMMENT_ADD,\n  POST_LIKE,\n  POST_CREATE,\n} from \"../constants/actionTypes\";\nimport { fetchFeed } from \"../../../utils/api/posts\";\nimport { IPost } from \"../../../interfaces/IPost\";\nimport _ from \"lodash\";\n\nconst INITIAL_STATE = {\n  posts: <any[]>[],\n  error: null,\n};\n\nfunction feedReducer(feedState = INITIAL_STATE, action: FeedActionTypes) {\n  switch (action.type) {\n    case POST_CREATE: {\n      console.log(\"case POST_CREATE\");\n      console.log(action.post_obj_res);\n\n      const feedStore = {\n        ...feedState,\n        posts: [...[action.post_obj_res.post_obj], ...feedState.posts],\n      };\n\n      return feedStore;\n    }\n    case FEED_FETCH: {\n      console.log(\"case FEED_FETCH\");\n      console.log(action.posts);\n\n      const feedStore = { ...feedState, posts: action.posts };\n\n      return feedStore;\n    }\n    case API_ERROR: {\n      console.log(\"case API_ERROR\");\n      console.log(action.error);\n\n      return { ...feedState, error: action.error };\n    }\n\n    case POST_LIKE: {\n      console.log(\"case POST_LIKE\");\n\n      let new_likes_arr: any[] = [];\n\n      for (let i = 0; i < feedState.posts.length; i++) {\n        if (feedState.posts[i].id == action.post_like.postId) {\n          if (!action.post_like.isLike) {\n            new_likes_arr = _.filter(\n              feedState.posts[i].likes,\n              (w) => w.userId != action.post_like.userId\n            );\n          } else {\n            new_likes_arr = [\n              ...feedState.posts[i].likes,\n              ...[\n                {\n                  id: action.post_like.id,\n                  userId: action.post_like.userId,\n                  postId: action.post_like.postId,\n                  username: action.post_like.username,\n                },\n              ],\n            ];\n          }\n          break;\n        }\n      }\n\n      const new_post_list = feedState.posts.map((post) => {\n        if (post.id == action.post_like.postId) {\n          return {\n            ...post,\n            likes: new_likes_arr,\n          };\n        }\n        return { ...post };\n      });\n\n      const final_state = {\n        ...feedState,\n        posts: new_post_list,\n      };\n\n      return final_state;\n    }\n\n    case COMMENT_ADD: {\n      console.log(\"case COMMENT_ADD\");\n\n      const new_state_post = feedState.posts.map((post) => {\n        if (post.id == action.comment_obj.postId) {\n          const new_commentList = [...post.commentList, action.comment_obj];\n\n          return { ...post, commentList: new_commentList };\n        } else {\n          return post;\n        }\n      });\n\n      return { ...feedState, posts: new_state_post };\n    }\n\n    default:\n      return feedState;\n  }\n}\n\nexport default feedReducer;\n","import { combineReducers } from \"redux\";\nimport feedReducer from \"./feed\";\n\nconst rootReducer = combineReducers({\n  feedState: feedReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport rootReducer from \"../reducers\";\n\nconst logger = createLogger();\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\nexport default store;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}